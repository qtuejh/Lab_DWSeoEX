axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps3],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 3",cex.main = 3)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted4,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps4],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 4",cex.main = 3)
par(mfrow = c(2,2))
at <- seq(as.Date("2020-06-01"), by = "1 day", length.out = (length(target)))
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt='n')
lines(at,dat$fitted,col = 2)
title(" Mean Change Point Detected : CASE 1",cex.main = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps1],lty = 2,col = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted2,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps2],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 2",cex.main = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted3,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps3],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 3",cex.main = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted4,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps4],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 4",cex.main = 2)
par(mfrow = c(2,2))
at <- seq(as.Date("2020-06-01"), by = "1 day", length.out = (length(target)))
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt='n')
lines(at,dat$fitted,col = 2)
title(" Mean Change Point Detected : CASE 1",cex.main = 1)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps1],lty = 2,col = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted2,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps2],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 2",cex.main = 1)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted3,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps3],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 3",cex.main = 1)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted4,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps4],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 4",cex.main = 1)
source("~/Desktop/Study_Master/research/realdata_bitcoin.R", echo=TRUE)
par(mfrow = c(2,2))
at <- seq(as.Date("2020-06-01"), by = "1 day", length.out = (length(target)))
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt='n')
lines(at,dat$fitted,col = 2)
title(" Mean Change Point Detected : CASE 1",cex.main = 1.5)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps1],lty = 2,col = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted2,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps2],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 2",cex.main = 1.5)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted3,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps3],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 3",cex.main = 1.5)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted4,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps4],lty = 2,col = 2)
title(" Mean Change Point Detected : CASE 4",cex.main = 1.5)
par(mfrow = c(2,2))
at <- seq(as.Date("2020-06-01"), by = "1 day", length.out = (length(target)))
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt='n')
lines(at,dat$fitted,col = 2)
title(" CASE 1 : CUSUM ",cex.main = 1.5)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps1],lty = 2,col = 2)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted2,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps2],lty = 2,col = 2)
title(" CASE 2 : SN ",cex.main = 1.5)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted3,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps3],lty = 2,col = 2)
title(" CASE 3 : CUSUM + BWB",cex.main = 1.5)
plot(at,data$price,type = "l",xlab = " ", ylab = "Price",xaxt = "n")
lines(at,dat$fitted4,col = 2)
axis(1,at=as.Date(c("2020-06-01","2021-06-01","2022-05-31")),
labels =c("2020-06-01","2021-06-01","2022-05-31") )
abline(v = at[chps4],lty = 2,col = 2)
title("  CASE 4 : SN + BWB ",cex.main = 1.5)
acf(target)
par(mfrow(c(1,2)))
par(mfrow=c(1,2))
acf(target);pacf(target)
par(mfrow=c(1,1))
ts.plot(target)
ts.plot(target,ylab = "Price");title("Original Time series - Bitcoin price")
ts.plot(target,ylab = "Price");title("Original time series - bitcoin price")
par(mfrow=c(1,2))
acf(target);title("SACF")
acf(target,main = "");title("SACF")
par(mfrow=c(1,2))
acf(target,main = "");title("SACF")
pacf(target,main = "");title("SACF")
acf(target,main = "");title("SACF")
pacf(target,main = "");title("SPACF")
install.packages("forecast")
forecast::auto.arima(target)
forecast::auto.arima(diff(target))
plot.ts(diff(target))
forecast::test(target)
test(target)
par(mfrow=c(1,1))
ts.plot(target,ylab = "Price");title("Original time series - bitcoin price")
par(mfrow=c(1,2))
acf(target,main = "");title("SACF")
pacf(target,main = "");title("SPACF")
result1_1 = self_normalize(data = target);result1_1$max_Gnk
data1 = target[1:result1_1$changepoint]
data2 = target[(result1_1$changepoint+1):length(target)]
chp1 = result1_1$changepoint
#2-1 72,109
result2_1 = self_normalize(data1);result2_1$max_Gnk
data3 = data1[1:result2_1$changepoint]
data4 = data1[(result2_1$changepoint+1):length(data1)]
chp2 = result2_1$changepoint
#2-2
result2_2 = self_normalize(data2)
result2_2$changepoint;result2_2$max_Gnk
#3-1
result3_1 = self_normalize(data3);result3_1$max_Gnk
data5 = data3[1:result3_1$changepoint]
data6 = data3[(result3_1$changepoint+1):length(data3)]
chp3 = result3_1$changepoint
#3-2
result3_2 = self_normalize(data4);result3_2$max_Gnk
#data7 = data4[1:result3_2$changepoint]
#data8 = data4[(result3_2$changepoint+1):length(data4)]
#chp4 = chp2+result3_2$changepoint
#4 - 1
length(data5)
#4-1
length(data6)
chps2 = c(chp1,chp2,chp3) %>% sort()
data5 = data3[1:result3_1$changepoint];length(data5)
data3
data6 = data3[(result3_1$changepoint+1):length(data3)];length(data6)
data5 = data3[1:result3_1$changepoint];length(data5)
ggplot(lda_term_top, aes(reorder(term, beta), beta, fill=factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic,scales="free")+
labs(x=NULL, y="Word-Topic Probability (Beta)") + coord_flip()+
theme(text = element_text(size = 7))
rm(list = ls())
setwd("/Users/fran/Desktop/Lab_Applied Statistics/request/DWSeo/code/")
library(tidyverse)
library(data.table)
library(lubridate)
library(magrittr)
library(tidytext)
library(tm)
library(doParallel)
library(extrafont)
library(wordcloud)
library(RColorBrewer)
source("tfidf_library.r")
font_import()
theme_set(theme_grey(base_family='NanumGothic'))
##################
library(ggwordcloud)
# 1. TF-IDF, TF
data_oc <- fread("../preprocessed_data/organizational_culture.csv")
oc_count <- make_tf_table(data_oc,
text_col = "keyword",
group_col = "covid_type",
top_n = 20)
geom_tf_plot(oc_count, x = "word", y = "n", facet_group = "covid_type",
title = "조직문화",
need_factor_arrange = T,
factor_order = c("pre_covid19","covid19","post_covid19"))
oc_tfidf <- make_tf_idf_table(data_oc,
text_col = "keyword",
group_col = "covid_type",
top_n.1 = 50,
top_n.2 = 10)
geom_tf_plot(oc_tfidf, x = "word", y = "tf_idf", facet_group = "covid_type",
title = "근무환경",
need_factor_arrange = T,
factor_order = c("pre_covid19","covid19","post_covid19"))
# 2. 워드 클라우드
# (1) pre-corona
oc_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# 2. 워드 클라우드
# (1) pre-corona
oc_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15,eccentricity=2) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=2)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=1)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=0.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=10)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=0.1)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=0.2)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=2)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.35)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
oc_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# 2. 워드 클라우드
# (1) pre-corona
oc_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
oc_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
oc_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
oc_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.3)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
oc_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
View(make_tf_idf_table)
# 1. TF-IDF, TF
data_we <- fread("../preprocessed_data/working_environment.csv")
we_count <- make_tf_table(data_we,
text_col = "keyword",
group_col = "covid_type",
top_n = 20)
# 2. 워드 클라우드
# (1) pre-corona
we_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# 2. 워드 클라우드
# (1) pre-corona
we_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
we_count %>%
filter(covid_type == "covid19") /%>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
we_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# 2. 워드 클라우드
# (1) pre-corona
we_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
we_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# 1. TF-IDF, TF
data_ew <- fread("../preprocessed_data/employee_welfare.csv")
ew_count <- make_tf_table(data_ew,
text_col = "keyword",
group_col = "covid_type",
top_n = 20)
# 2. 워드 클라우드
# (1) pre-corona
ew_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
ew_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
ew_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
data_ca = fread("/Users/fran/Desktop/Lab_Applied Statistics/request/DWSeo/preprocessed_data/career.csv")
data_ca_pre = data_ca %>% mutate(
article = str_replace_all(keyword,","," ")
) %>% filter(covid_type=="pre_covid19")
myRemove = content_transformer(function(x, pattern){return(gsub(pattern, "",x))})
toSpace = content_transformer(function(x, pattern){return(gsub(pattern," ",x))})
# (2) corona
ca_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
ca_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# 1. TF-IDF, TF
data_ca <- fread("../preprocessed_data/career.csv")
ca_count <- make_tf_table(data_ca,
text_col = "keyword",
group_col = "covid_type",
top_n = 20)
# 2. 워드 클라우드
# (1) pre-corona
ca_count %>%
filter(covid_type == "pre_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
ca_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area()+
scale_size_area(max_size = 15) +
theme_minimal()
# (2) corona
ca_count %>%
filter(covid_type == "covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
# (3) post - corona
ca_count %>%
filter(covid_type == "post_covid19") %>%
arrange(desc(n)) %>%
ggplot(aes(label = word, size = n,family = "AppleGothic",color = word)) +
geom_text_wordcloud_area(eccentricity=.5)+
scale_size_area(max_size = 15) +
theme_minimal()
View(data_ew_covid)
